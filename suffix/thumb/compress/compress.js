//takes a list of strings, and creates a compressed-but-readable representation
//
'use strict';
let fns = require('../fns.js');

Array.prototype.getUnique = function () {
  var u = {},
    a = [];
  for (var i = 0, l = this.length; i < l; ++i) {
    if (u.hasOwnProperty(this[i])) {
      continue;
    }
    a.push(this[i]);
    u[this[i]] = 1;
  }
  return a;
}

let arr = [
  "abu",
  "adolfo",
  "angelo",
  "anthony",
  "armand",
  "arthur",
  "billy",
  "bobby",
  "bradford",
  "bret",
  "caleb",
  "carroll",
  "clifford",
  "craig",
  "curt",
  "derek",
  "doug",
  "dwight",
  "edmund",
  "eli",
  "elliot",
  "enrique",
  "erik",
  "felipe",
  "felix",
  "francisco",
  "frank",
  "george",
  "glenn",
  "greg",
  "gregg",
  "hans",
  "hugh",
  "ira",
  "irving",
  "isaac",
  "jim",
  "kermit",
  "kurt",
  "leo",
  "levi",
  "lorenzo",
  "lou",
  "pablo",
  "percy",
  "philip",
  "phillip",
  "rex",
  "ricky",
  "shaun",
  "shawn",
  "sterling",
  "steve",
  "tim",
  "timothy",
  "wilbur",
  "williams",
  "woodrow",
  "muhammad",
  "mohammad",
  "mohamad",
  "mohamed",
  "muhamed",
  "youssef",
  "ahmed",
  "mahmoud",
  "mustafa",
  "yassin",
  "khaled",
  "hamza",
  "bilal",
  "ibrahim",
  "hassan",
  "hussein",
  "karim",
  "tareq",
  "ali",
  "omar",
  "halim",
  "murad",
  "selim",
  "abdallah",
  "beshoi",
  "kirollos",
  "mark",
  "fadi",
  "habib",
  "mamadou",
  "mehdi",
  "juan",
  "antonio",
  "ahmed",
  "hamza",
  "ibrahim",
  "mahmoud",
  "abdallah",
  "tareq",
  "hassan",
  "khaled",
  "moussa",
  "mahamadou",
  "adama",
  "abdoulaye",
  "modibo",
  "oumar",
  "sekou",
  "souleymane",
  "ahmed",
  "mohammed",
  "rachid",
  "mustapha",
  "youssef",
  "hassan",
  "abdel",
  "ali",
  "youssef",
  "aziz",
  "karim",
  "santiago",
  "mateo",
  "juan",
  "matias",
  "nicolas",
  "benjamin",
  "pedro",
  "tomas",
  "thiago",
  "santino",
  "miguel",
  "arthur",
  "davi",
  "pedro",
  "bernardo",
  "gabriel",
  "lucas",
  "matheus",
  "heitor",
  "rafael",
  "liam",
  "jackson",
  "logan",
  "lucas",
  "noah",
  "ethan",
  "jack",
  "william",
  "jacob",
  "james",
  "thomas",
  "william",
  "jacob",
  "liam",
  "felix",
  "nathan",
  "samuel",
  "logan",
  "alexis",
  "noah",
  "agustin",
  "benjamin",
  "vicente",
  "mateo",
  "martin",
  "matias",
  "alonso",
  "tomas",
  "maximiliano",
  "joaquin",
  "santiago",
  "juan",
  "david",
  "juan",
  "jose",
  "andres",
  "felipe",
  "samuel",
  "sebastian",
  "matias",
  "alejandro",
  "nicolas",
  "jeronimo",
  "jayden",
  "daniel",
  "joshua",
  "justin",
  "ajani",
  "jaden",
  "mateo",
  "matias",
  "diego",
  "sebastian",
  "nicolas",
  "miguel",
  "angel",
  "iker",
  "alejandro",
  "samuel",
  "ramon",
  "juan",
  "jose",
  "antonio",
  "carlos",
  "daniel",
  "luis",
  "javier",
  "david",
  "cesar",
  "ethan",
  "noah",
  "aiden",
  "jayden",
  "elijah",
  "jeremiah",
  "liam",
  "joshua",
  "carter",
  "mason",
  "amir",
  "deven",
  "ishaan",
  "neil",
  "aryan",
  "rohan",
  "arnav",
  "nikhil",
  "david",
  "armaan",
  "suraj",
  "agustin",
  "matias",
  "santiago",
  "nicolas",
  "martin",
  "bruno",
  "francisco",
  "rodrigo",
  "mateo",
  "joaquin",
  "hamza",
  "abdulrahman",
  "yousouf",
  "wei",
  "jie",
  "hao",
  "yi",
  "jun",
  "feng",
  "yong",
  "jian",
  "lei",
  "aarav",
  "reyansh",
  "mohammad",
  "vivaan",
  "ayaan",
  "vihaan",
  "advik",
  "arjun",
  "amir",
  "abulfazl",
  "amir",
  "hossein",
  "ali",
  "mohammad",
  "mahdi",
  "hossein",
  "mahdi",
  "reza",
  "ali",
  "muhammed",
  "hussein",
  "hydar",
  "ahmed",
  "omar",
  "hasan",
  "kathem",
  "abdullah",
  "ammar",
  "noam",
  "ori",
  "david",
  "yosef",
  "eitan",
  "itai",
  "ariel",
  "daniel",
  "yonatan",
  "moshe",
  "minato",
  "ichika",
  "itsuki",
  "tatsuki",
  "hinata",
  "haruta",
  "asahi",
  "haruki",
  "tomoharu",
  "souta",
  "yuuma",
  "arata",
  "ryou",
  "yuuto",
  "haruto",
  "haruhito",
  "souta",
  "kanata",
  "hayato",
  "taichi",
  "bilal",
  "usman",
  "zahid",
  "shahid",
  "saqib",
  "nomaan",
  "abdullo",
  "abubakr",
  "noel",
  "joel",
  "mateo",
  "ergi",
  "luis",
  "aron",
  "samuel",
  "roan",
  "roel",
  "marc",
  "eric",
  "daniel",
  "enzo",
  "ian",
  "pol",
  "alex",
  "jordi",
  "marti",
  "lukas",
  "maximilian",
  "jakob",
  "david",
  "tobias",
  "paul",
  "jonas",
  "felix",
  "alexander",
  "elias",
  "lucas",
  "louis",
  "noah",
  "nathan",
  "adam",
  "arthur",
  "mohamed",
  "victor",
  "mathis",
  "liam",
  "leo",
  "elias",
  "oliver",
  "niilo",
  "leevi",
  "daniel",
  "malik",
  "aputsiaq",
  "minik",
  "hans",
  "inunnguaq",
  "kristian",
  "salik",
  "peter",
  "inuk",
  "francesco",
  "alessandro",
  "lorenzo",
  "andrea",
  "leonardo",
  "mattia",
  "matteo",
  "gabriele",
  "riccardo",
  "tommaso",
  "aleksandar",
  "zoran",
  "nikola",
  "dragan",
  "dejan",
  "petar",
  "igor",
  "ilija",
  "stefan",
  "nikola",
  "marko",
  "dragan",
  "milos",
  "milan",
  "aleksandar",
  "ivan",
  "petar",
  "luka",
  "antoni",
  "jakub",
  "aleksander",
  "franciszek",
  "adam",
  "filip",
  "stanislaw",
  "szymon",
  "mikolaj",
  "yusuf",
  "berat",
  "mustafa",
  "emir",
  "ahmet",
  "omer",
  "mehmet",
  "muhammed",
  "emirhan",
  "eymen",
  "clarence",
  "laurence",
  "lawrence",
  "terence",
  "terrence",
  "albert",
  "delbert",
  "elbert",
  "gilbert",
  "wilbert",
  "agustin",
  "austin",
  "dustin",
  "justin",
  "alberto",
  "gilberto",
  "humberto",
  "roberto",
  "chester",
  "lester",
  "sylvester",
  "donnie",
  "lonnie",
  "ronnie",
  "dewayne",
  "dwayne",
  "wayne",
  "erick",
  "frederick",
  "roderick",
  "johnathan",
  "jonathan",
  "nathan",
  "elvin",
  "kelvin",
  "melvin",
  "emanuel",
  "emmanuel",
  "manuel",
  "bert",
  "herbert",
  "hubert",
  "norbert",
  "robert",
  "derrick",
  "fredrick",
  "kendrick",
  "patrick",
  "rick",
  "cleveland",
  "garland",
  "leland",
  "roland",
  "armando",
  "fernando",
  "orlando",
  "rolando",
  "eduardo",
  "gerardo",
  "leonardo",
  "ricardo",
  "alton",
  "carlton",
  "elton",
  "milton",
  "barry",
  "garry",
  "harry",
  "larry",
  "anton",
  "clinton",
  "quinton",
  "alfred",
  "fred",
  "wilfred",
  "lance",
  "terrance",
  "vance",
  "jimmie",
  "sammie",
  "tommie",
  "jerry",
  "perry",
  "terry",
  "desmond",
  "edmond",
  "raymond",
  "herman",
  "norman",
  "sherman",
  "ervin",
  "irvin",
  "marvin",
  "donald",
  "reginald",
  "ronald",
  "brett",
  "everett",
  "garrett",
  "harrison",
  "jackson",
  "jason",
  "nelson",
  "tyson",
  "wilson",
  "darnell",
  "darrell",
  "lowell",
  "mitchell",
  "russell",
  "terrell",
  "wendell",
  "bernard",
  "edward",
  "gerard",
  "howard",
  "leonard",
  "richard",
  "willard",
  "adrian",
  "brian",
  "christian",
  "damian",
  "fabian",
  "ian",
  "julian",
  "brandon",
  "don",
  "eldon",
  "gordon",
  "sheldon",
  "aaron",
  "byron",
  "cameron",
  "myron",
  "ron",
  "burton",
  "clayton",
  "clifton",
  "preston",
  "winston",
  "alan",
  "allan",
  "dylan",
  "harlan",
  "nolan",
  "carey",
  "corey",
  "geoffrey",
  "jeffrey",
  "brent",
  "kent",
  "trent",
  "vincent",
  "ismael",
  "michael",
  "rafael",
  "raphael",
  "jimmy",
  "sammy",
  "timmy",
  "tommy",
  "damon",
  "ramon",
  "simon",
  "solomon",
  "dallas",
  "douglas",
  "nicholas",
  "nicolas",
  "alvin",
  "calvin",
  "devin",
  "kevin",
  "benny",
  "danny",
  "johnny",
  "kenny",
  "cornelius",
  "darius",
  "demetrius",
  "julius",
  "bradley",
  "harley",
  "stanley",
  "wesley",
  "emilio",
  "julio",
  "rogelio",
  "ben",
  "reuben",
  "ruben",
  "cory",
  "gregory",
  "rory",
  "billie",
  "charlie",
  "willie",
  "evan",
  "ivan",
  "leroy",
  "roy",
  "troy",
  "kendall",
  "marshall",
  "randall",
  "gary",
  "zachary",
  "freddy",
  "teddy",
  "bart",
  "stewart",
  "stuart",
  "daniel",
  "gabriel",
  "nathaniel",
  "colin",
  "franklin",
  "marlin",
  "doyle",
  "kyle",
  "lyle",
  "christopher",
  "kristopher",
  "luther",
  "floyd",
  "lloyd",
  "darren",
  "loren",
  "warren",
  "dexter",
  "peter",
  "walter",
  "carl",
  "earl",
  "karl",
  "dane",
  "duane",
  "shane",
  "paul",
  "raul",
  "saul",
  "brendan",
  "dan",
  "jordan",
  "bennie",
  "ernie",
  "johnnie",
  "antoine",
  "blaine",
  "jermaine",
  "ralph",
  "randolph",
  "rudolph",
  "earnest",
  "ernest",
  "forrest",
  "darwin",
  "edwin",
  "erwin",
  "chris",
  "curtis",
  "denis",
  "dennis",
  "ellis",
  "francis",
  "lewis",
  "louis",
  "luis",
  "morris",
  "otis",
  "travis",
  "willis",
  "alexander",
  "elmer",
  "grover",
  "homer",
  "jasper",
  "javier",
  "oliver",
  "rodger",
  "roger",
  "spencer",
  "tyler",
  "xavier",
  "bryan",
  "dean",
  "esteban",
  "ethan",
  "juan",
  "logan",
  "roman",
  "ryan",
  "sean",
  "stan",
  "stephan",
  "abel",
  "darrel",
  "fidel",
  "joel",
  "lionel",
  "marcel",
  "michel",
  "miguel",
  "noel",
  "russel",
  "samuel",
  "benjamin",
  "darin",
  "darrin",
  "efrain",
  "joaquin",
  "martin",
  "quentin",
  "archie",
  "eddie",
  "frankie",
  "freddie",
  "louie",
  "reggie",
  "robbie",
  "allen",
  "damien",
  "glen",
  "ken",
  "owen",
  "stephen",
  "steven",
  "dewey",
  "harvey",
  "joey",
  "mickey",
  "rickey",
  "rodney",
  "sidney",
  "al",
  "hal",
  "jamal",
  "micheal",
  "neal",
  "randal",
  "bryon",
  "jon",
  "jonathon",
  "leon",
  "marlon",
  "vernon",
  "hector",
  "junior",
  "salvador",
  "taylor",
  "trevor",
  "victor",
  "andy",
  "brady",
  "cody",
  "grady",
  "rudy",
  "bruce",
  "bryce",
  "horace",
  "maurice",
  "royce",
  "wallace",
  "cecil",
  "emil",
  "neil",
  "phil",
  "virgil",
  "cesar",
  "edgar",
  "lamar",
  "omar",
  "oscar",
  "andres",
  "charles",
  "james",
  "moses",
  "alejandro",
  "alvaro",
  "arturo",
  "pedro",
  "ramiro",
  "abraham",
  "adam",
  "graham",
  "sam",
  "william",
  "chuck",
  "dominick",
  "mack",
  "nick",
  "antonio",
  "gregorio",
  "ignacio",
  "mario",
  "sergio",
  "elijah",
  "jeremiah",
  "micah",
  "noah",
  "bryant",
  "clint",
  "grant",
  "lamont",
  "andre",
  "pierre",
  "salvatore",
  "theodore",
  "ed",
  "jared",
  "ned",
  "ted",
  "arnold",
  "gerald",
  "harold",
  "jerald",
  "elias",
  "lucas",
  "thomas",
  "tomas",
  "amos",
  "carlos",
  "marcos",
  "santos",
  "andrew",
  "mathew",
  "matthew",
  "blake",
  "jake",
  "luke",
  "mike",
  "elliott",
  "emmett",
  "matt",
  "scott",
  "marty",
  "monty",
  "scotty",
  "heath",
  "keith",
  "kenneth",
  "seth",
  "clay",
  "jay",
  "murray",
  "dale",
  "merle",
  "orville",
  "monte",
  "pete",
  "vicente",
  "jesus",
  "marcus",
  "rufus",
  "elwood",
  "jarrod",
  "jacob",
  "benito",
  "ernesto",
  "otto",
  "eugene",
  "gene",
  "tyrone",
  "domingo",
  "hugo",
  "santiago",
  "claude",
  "clyde",
  "wade",
  "alfredo",
  "reynaldo",
  "wilfredo",
  "clark",
  "kirk",
  "mark",
  "chase",
  "jesse",
  "jose",
  "henry",
  "jeffery",
  "jeffry",
  "cedric",
  "dominic",
  "eric",
  "brad",
  "chad",
  "conrad",
  "joseph",
  "josh",
  "joshua",
  "rocky",
  "rodolfo",
  "roosevelt",
  "roscoe",
  "ross",
  "jeff",
  "jeremy",
  "jerome",
  "jess",
  "toby",
  "todd",
  "tom",
  "tony",
  "darryl",
  "daryl",
  "dave",
  "david",
  "joe",
  "joesph",
  "john",
  "jorge",
  "malcolm",
  "marc",
  "marco",
  "max",
  "alex",
  "alfonso",
  "ali",
  "alonzo",
  "guillermo",
  "gustavo",
]

arr = arr.getUnique()

let remaining = arr;
let final = {};

const suffix = function (str, size) {
  let len = str.length;
  if (size <= 0) {
    return null;
  }
  if (size > len) {
    return null;
  }
  return str.substr(len - size, len);
};

const make_prefixes = function (suffix) {
  let str = '';
  let reg = new RegExp(suffix + '$');
  remaining = remaining.filter((s) => {
    if (s.match(reg)) {
      str += s.replace(reg, '') + ',';
      return false;
    }
    return true;
  });
  return str.replace(/,$/, '');
};

for (let size = 5; size > 1; size--) {
  let suffixes = remaining.map((s) => suffix(s, size)).filter((f) => f !== null);
  let matches = fns.topkp(suffixes);
  //find which to use
  for (let i = 0; i < matches.length; i++) {
    let m = matches[i];
    if (m.percent < 1 || m.count < 4) {
      break;
    }
    final[m.value] = make_prefixes(m.value);
  }
}
console.log(JSON.stringify(final, null, 2));
console.log(JSON.stringify(remaining, null, 2));
